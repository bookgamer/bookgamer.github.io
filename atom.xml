<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>欢迎来到夕阳狠渼..的博客网站</title>
  
  
  <link href="https://bookgamer.github.io/atom.xml" rel="self"/>
  
  <link href="https://bookgamer.github.io/"/>
  <updated>2024-09-13T15:48:06.699Z</updated>
  <id>https://bookgamer.github.io/</id>
  
  <author>
    <name>夕阳狠渼..</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>搭建聊天机器人（以微信为例）</title>
    <link href="https://bookgamer.github.io/2024/09/13/AI/"/>
    <id>https://bookgamer.github.io/2024/09/13/AI/</id>
    <published>2024-09-13T15:44:40.721Z</published>
    <updated>2024-09-13T15:48:06.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="微信聊天机器人搭建——视频讲解说明"><a href="#微信聊天机器人搭建——视频讲解说明" class="headerlink" title="微信聊天机器人搭建——视频讲解说明"></a>微信聊天机器人搭建——视频讲解说明</h2><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=113079979347853&bvid=BV19kpcekEJY&cid=25739725387&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;微信聊天机器人搭建——视频讲解说明&quot;&gt;&lt;a href=&quot;#微信聊天机器人搭建——视频讲解说明&quot; class=&quot;headerlink&quot; title=&quot;微信聊天机器人搭建——视频讲解说明&quot;&gt;&lt;/a&gt;微信聊天机器人搭建——视频讲解说明&lt;/h2&gt;&lt;iframe src=&quot;</summary>
      
    
    
    
    
    <category term="ai" scheme="https://bookgamer.github.io/tags/ai/"/>
    
  </entry>
  
  <entry>
    <title>使用docker搭建rustdesk中继服务器，完全替代向日葵，todesk</title>
    <link href="https://bookgamer.github.io/2024/08/17/rustdesk/"/>
    <id>https://bookgamer.github.io/2024/08/17/rustdesk/</id>
    <published>2024-08-17T10:07:36.543Z</published>
    <updated>2024-08-17T14:02:40.020Z</updated>
    
    <content type="html"><![CDATA[<h2 id="视频讲解说明"><a href="#视频讲解说明" class="headerlink" title="视频讲解说明"></a>视频讲解说明</h2><iframe width="800" height="450"   src="//player.bilibili.com/player.html?isOutside=true&aid=112977638328414&bvid=BV18GpZe8EVo&cid=500001652827394&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen></iframe><h2 id="简单说明"><a href="#简单说明" class="headerlink" title="简单说明"></a>简单说明</h2><p>Rust Desk 是开源，可以100%平替向日葵、Todesk的项目，电脑控制电脑，电脑控制手机，手机控制电脑等功能全部都有，完全免费。<br><a href="https://rustdesk.com/">官网跳转</a></p><h2 id="自己搭建服务器的优点"><a href="#自己搭建服务器的优点" class="headerlink" title="自己搭建服务器的优点"></a>自己搭建服务器的优点</h2><ul><li>速度快，信息安全性高。</li><li>没有限制，可以自由连接，比如说，如果你用他自带的，那么你电脑控制安卓手机，就会有限制，不能控制。<br>以上是我目前知道的，欢迎补充。</li></ul><h2 id="Windows，安卓客户端下载"><a href="#Windows，安卓客户端下载" class="headerlink" title="Windows，安卓客户端下载"></a>Windows，安卓客户端下载</h2><p><a href="https://www.zenithvibes.icu/apk/rustdesk-1.3.0-aarch64-signed.apk">安卓安装包下载</a><br><a href="https://www.zenithvibes.icu/apk/rustdesk-1.3.0-x86_64.msi">Windows安装程序</a></p><h2 id="拉取docker镜像"><a href="#拉取docker镜像" class="headerlink" title="拉取docker镜像"></a>拉取docker镜像</h2><p>安装docker我就不写了，各位可以自行百度。<br>如果是国外的服务器，你直接拉取就可以了，但是如果是国内，那懂得都懂。</p><pre><code class="highlight sh">//国外服务器就直接拉取sudo docker image pull rustdesk/rustdesk-server//国内，使用一个我朋友的自己的镜像仓库sudo docker pull registry.cn-beijing.aliyuncs.com/docker_20240704/rustdesk-rustdesk-server:latest</code></pre><h2 id="运行容器"><a href="#运行容器" class="headerlink" title="运行容器"></a>运行容器</h2><pre><code class="highlight sh">//国外服务器sudo docker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `<span class="built_in">pwd</span>`:/root -td --net=host rustdesk/rustdesk-server hbbs -r 127.0.0.1:8888 //最后这个换成你自己服务器的ip和你想使用的端口 sudo docker run --name hbbr -p 21117:21117 -p 21119:21119 -v `<span class="built_in">pwd</span>`:/root -td --net=host rustdesk/rustdesk-server hbbr//国内sudo docker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `<span class="built_in">pwd</span>`:/root -td --net=host registry.cn-beijing.aliyuncs.com/docker_20240704/rustdesk-rustdesk-server:latest hbbs -r 127.0.0.1:8888 //最后这个换成你自己服务器的ip和你想使用的端口 sudo docker run --name hbbr -p 21117:21117 -p 21119:21119 -v `<span class="built_in">pwd</span>`:/root -td --net=host registry.cn-beijing.aliyuncs.com/docker_20240704/rustdesk-rustdesk-server:latest hbbr</code></pre><p>如果希望您禁止没有key的用户建立非加密连接，就是必须需要key才能互相连接控制，那么只需要在运行hbbs和hbbr的时候添加-k _ 参数即可。</p><pre><code class="highlight sh">//国外服务器sudo docker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `<span class="built_in">pwd</span>`:/root -td --net=host rustdesk/rustdesk-server hbbs -r 127.0.0.1:8888 -k _  //记得换成你自己服务器的ip和你想使用的端口 sudo docker run --name hbbr -p 21117:21117 -p 21119:21119 -v `<span class="built_in">pwd</span>`:/root -td --net=host rustdesk/rustdesk-server hbbr -k _//国内sudo docker run --name hbbs -p 21115:21115 -p 21116:21116 -p 21116:21116/udp -p 21118:21118 -v `<span class="built_in">pwd</span>`:/root -td --net=host registry.cn-beijing.aliyuncs.com/docker_20240704/rustdesk-rustdesk-server:latest hbbs -r 127.0.0.1:8888 -k _ //最后这个换成你自己服务器的ip和你想使用的端口 sudo docker run --name hbbr -p 21117:21117 -p 21119:21119 -v `<span class="built_in">pwd</span>`:/root -td --net=host registry.cn-beijing.aliyuncs.com/docker_20240704/rustd -k _</code></pre><h2 id="需要放行的端口"><a href="#需要放行的端口" class="headerlink" title="需要放行的端口"></a>需要放行的端口</h2><p>hbbs 容器（ID 服务器）:</p><p>21115&#x2F;tcp：用于 NAT 测试的额外端口。<br>21116&#x2F;tcp 和 21116&#x2F;udp：主通信端口。<br>21118&#x2F;tcp：用于 WebSocket 连接。<br>hbbr 容器（中继服务器）:</p><p>21117&#x2F;tcp：用于中继服务的主通信端口。<br>21119&#x2F;tcp：用于 WebSocket 连接。</p><h2 id="查看key"><a href="#查看key" class="headerlink" title="查看key"></a>查看key</h2><p>注意，最新版本中的key是强制的，会自动生成<br><img src="/img/ru4.jpg"></p><h2 id="手机客户端配置"><a href="#手机客户端配置" class="headerlink" title="手机客户端配置"></a>手机客户端配置</h2><p><img src="/img/ru1.jpg"><br><img src="/img/ru2.jpg"></p><h2 id="windows客户端配置"><a href="#windows客户端配置" class="headerlink" title="windows客户端配置"></a>windows客户端配置</h2><p><img src="/img/ru3.jpg"></p><h2 id="本人搭建好的服务器和key"><a href="#本人搭建好的服务器和key" class="headerlink" title="本人搭建好的服务器和key"></a>本人搭建好的服务器和key</h2><pre><code class="highlight sh">key: +531BltM6fLG9UgLF5xh52s80uVc0UAiKSYW8hvRjfo=ip: 175.178.16.241</code></pre>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;视频讲解说明&quot;&gt;&lt;a href=&quot;#视频讲解说明&quot; class=&quot;headerlink&quot; title=&quot;视频讲解说明&quot;&gt;&lt;/a&gt;视频讲解说明&lt;/h2&gt;&lt;iframe width=&quot;800&quot; height=&quot;450&quot;   src=&quot;//player.bilibili</summary>
      
    
    
    
    <category term="rustdesk" scheme="https://bookgamer.github.io/categories/rustdesk/"/>
    
    
    <category term="远程控制" scheme="https://bookgamer.github.io/tags/%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6/"/>
    
  </entry>
  
  <entry>
    <title>适合Python零基础，不需要有任何Python经验)Python对接OpenAI API GTP3.5官方接口实现智能QQ机器人</title>
    <link href="https://bookgamer.github.io/2024/07/14/%E6%8E%A5%E5%85%A5GPT/"/>
    <id>https://bookgamer.github.io/2024/07/14/%E6%8E%A5%E5%85%A5GPT/</id>
    <published>2024-07-14T08:03:50.468Z</published>
    <updated>2024-07-14T09:03:19.315Z</updated>
    
    <content type="html"><![CDATA[<h2 id="点击跳转原文-简单说明一下情况"><a href="#点击跳转原文-简单说明一下情况" class="headerlink" title="点击跳转原文(简单说明一下情况)"></a>点击跳转原文(简单说明一下情况)</h2><p><a href="https://lucent.blog/?p=118">原文链接</a><br>以下用的所有图片都是本人的。所以水印就不去了，话不多说，开始正文</p><h2 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h2><p>首先就是下载这个链接里面大佬提供的Python代码和一些Windows脚本<br><a href="https://dayzwiki.oss-cn-shanghai.aliyuncs.com/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%98%E6%96%B9API3.5%E7%89%88202303031307.zip">代码下载</a><br>还有一个是Windows封装版就是配置文件改好之后，不用安转Python环境和依赖，但是因为本人没有使用过，所以在这里不做评价，所以本篇文章还是详细说明代码版<br><a href="https://dayzwiki.oss-cn-shanghai.aliyuncs.com/QQ%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AE%98%E6%96%B9API3.5%E5%B0%81%E8%A3%85%E7%89%88202303031305.zip">Windows封装版</a><br>首先也就是最重要的，就是你要有个OpenAI的账号，你可以自己注册，也可以自己去某宝买，<br>在这里本人建议还是去买，懂得都懂,这里就不详细说了，要是想注册的话，可以去网上找一下教程，很多的</p><h2 id="申请api-key"><a href="#申请api-key" class="headerlink" title="申请api-key"></a>申请api-key</h2><p>首先你得登录上你得账号<br><a href="https://beta.openai.com/login/">openai账号登录</a><br>然后就是点击下面传送门直接过去获取key<br><a href="https://beta.openai.com/account/api-keys">获取api-key</a><br><img src="/img/gpt1.png"></p><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>首先就是先把代码版下载的解压，解压之后会得到：<br><img src="/img/gpt2.png"><br>然后点击打开：<br><img src="/img/gpt3.png"><br>最后一个文件，也不用管，有没有都行<br>首先打开py文件夹，下面图片文字有点多，但是请仔细观看，注意这张图片结合下面py文件夹Windows操作理解<br><img src="/img/gpt4.png"><br>这个是linux上安装依赖的命令，注意在Py目录下面执行就好了</p><pre><code class="highlight sh">pip3 install -r requirements.txt</code></pre><p>然后打开config.json文件：<br><img src="/img/gpt5.png"><br>保存退出，<br>然后打开QBot文件夹<br><img src="/img/gpt6.png"><br>首先打开config.yml文件，并且按照下面提示修改<br><img src="/img/gpt7.png"><br>剩下的，如果是小白就不用管了，直接保存就好了，大佬的话，想了解就看看吧，因为我也是个Python小白， 所以我就直接保存退出了<br>然后在打开device.json文件，修改其中的：<br><img src="/img/gpt8.png"><br>保存返回，打开py文件夹<br>下面操作的前提是你已经有了Python3环境并且配置环境变量好了</p><h2 id="py文件夹下面的Windows操作方式"><a href="#py文件夹下面的Windows操作方式" class="headerlink" title="py文件夹下面的Windows操作方式"></a>py文件夹下面的Windows操作方式</h2><p><img src="/img/gpt9.png"><br>当你点击2之后，看到：<br><img src="/img/gpt10.png"><br>就证明成功了。</p><h2 id="py文件夹下面的linux操作方式"><a href="#py文件夹下面的linux操作方式" class="headerlink" title="py文件夹下面的linux操作方式"></a>py文件夹下面的linux操作方式</h2><pre><code class="highlight sh"><span class="comment"># 前台运行</span>python3 QBot.py<span class="comment"># 后台运行</span><span class="built_in">nohup</span> python3 QBot.py &amp;</code></pre><p>然后打开 QBot 文件夹</p><h2 id="QBot-文件夹下面的windows操作"><a href="#QBot-文件夹下面的windows操作" class="headerlink" title="QBot 文件夹下面的windows操作"></a>QBot 文件夹下面的windows操作</h2><p>Windows 双击 go-cqhttp.bat 即可启动，如果你配置文件填写了密码，那么进行以下操作<br><img src="/img/gpt11.png"><br>选择2，进行扫码验证，这还是要跟电脑连接同一个无线网，当然要是不在同一个网络就选择1，<br>进行滑条验证，他会生成一个链接，复制发送到手机，然后手机浏览器打开进行验证就好了<br>如果你配置文件没有填写密码，那么就是：<br><img src="/img/gpt12.png"><br>手机进行扫码就好了，要求跟上面的一样，要在同一个无线网， 看到：<br><img src="/img/gpt13.png"><br>这样就算成功了，记得不要关闭这俩窗口，py文件夹下面打开的那个窗口也不要关闭</p><h2 id="QBot-文件夹下面的linux操作方式"><a href="#QBot-文件夹下面的linux操作方式" class="headerlink" title="QBot 文件夹下面的linux操作方式"></a>QBot 文件夹下面的linux操作方式</h2><pre><code class="highlight sh"><span class="comment"># 前台运行命令</span>./go-cqhttp<span class="comment"># 后台运行命令</span><span class="built_in">nohup</span> ./go-cqhttp &gt; logs/`<span class="built_in">date</span> -d yesterday +%Y%m%d`.<span class="built_in">log</span> 2&gt;&amp;1 &amp;</code></pre><h3 id="注意这里：linux可能会提示你没有操作权限，那么在进行这行linux命令"><a href="#注意这里：linux可能会提示你没有操作权限，那么在进行这行linux命令" class="headerlink" title="注意这里：linux可能会提示你没有操作权限，那么在进行这行linux命令"></a>注意这里：linux可能会提示你没有操作权限，那么在进行这行linux命令</h3><pre><code class="highlight sh"><span class="built_in">chmod</span> 777 go-cqhttp</code></pre><p>在执行上面的linux操作就可以了，<br>然后就可以进行测试了，找到你的测试QQ号：<br><img src="/img/gpt14.png"><br>这文章到这里就结束了，文章如果有问题随时私信我，进行修改哦，有啥问题欢迎交流，点击左下角的就可以跟我聊天，也可以去留言板，进行留言</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;点击跳转原文-简单说明一下情况&quot;&gt;&lt;a href=&quot;#点击跳转原文-简单说明一下情况&quot; class=&quot;headerlink&quot; title=&quot;点击跳转原文(简单说明一下情况)&quot;&gt;&lt;/a&gt;点击跳转原文(简单说明一下情况)&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https:/</summary>
      
    
    
    
    <category term="AI" scheme="https://bookgamer.github.io/categories/AI/"/>
    
    
    <category term="ChatGpt" scheme="https://bookgamer.github.io/tags/ChatGpt/"/>
    
    <category term="Python" scheme="https://bookgamer.github.io/tags/Python/"/>
    
    <category term="QQ" scheme="https://bookgamer.github.io/tags/QQ/"/>
    
  </entry>
  
  <entry>
    <title>影视上新</title>
    <link href="https://bookgamer.github.io/2024/07/06/%E5%BD%B1%E8%A7%86/"/>
    <id>https://bookgamer.github.io/2024/07/06/%E5%BD%B1%E8%A7%86/</id>
    <published>2024-07-06T11:00:00.000Z</published>
    <updated>2024-07-14T07:57:07.605Z</updated>
    
    <content type="html"><![CDATA[<p>大家好，在生活下面的影视标签中，已经开始上传电影和电视剧了，目前只有一部电视剧，正是我们童年的铠甲勇士拿瓦，大家可以去看看，手机和电脑都行。<br>当然，你也点击直达电视剧所在页面<a href="https://bookgamer.github.io/KaiJia/">生活-影视-铠甲勇士拿瓦</a></p><h2 id="不定时更新影视"><a href="#不定时更新影视" class="headerlink" title="不定时更新影视"></a>不定时更新影视</h2><p>如果你有想看的电影或者电视，可以给我留言，后续会慢慢上新</p><h2 id="后续更新"><a href="#后续更新" class="headerlink" title="后续更新"></a>后续更新</h2><p>我会不断努力改进和优化网站，未来将推出更多功能和页面。请持续关注我的网站，期待更多惊喜！</p><p>感谢您对我网站的支持！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;大家好，在生活下面的影视标签中，已经开始上传电影和电视剧了，目前只有一部电视剧，正是我们童年的铠甲勇士拿瓦，大家可以去看看，手机和电脑都行。&lt;br&gt;当然，你也点击直达电视剧所在页面&lt;a href=&quot;https://bookgamer.github.io/KaiJia/&quot;&gt;生</summary>
      
    
    
    
    <category term="网站" scheme="https://bookgamer.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="推荐" scheme="https://bookgamer.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
    <category term="生活" scheme="https://bookgamer.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>网站更新功能</title>
    <link href="https://bookgamer.github.io/2024/06/30/%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7/"/>
    <id>https://bookgamer.github.io/2024/06/30/%E7%BD%91%E7%AB%99%E5%8D%87%E7%BA%A7/</id>
    <published>2024-06-30T02:00:00.000Z</published>
    <updated>2024-07-14T07:57:05.903Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实时聊天功能"><a href="#实时聊天功能" class="headerlink" title="实时聊天功能"></a>实时聊天功能</h2><p>大家好，网站已经上线了实时聊天功能！您可以在页面的下方看到聊天图标，点击即可与我进行实时交流。如果您有任何问题或建议，请随时与我联系，我会尽快回复您。</p><h2 id="生活-音乐板块上新"><a href="#生活-音乐板块上新" class="headerlink" title="生活-音乐板块上新"></a>生活-音乐板块上新</h2><p>我在生活板块的音乐部分上架了新的音乐歌单。现在，您可以在<a href="https://bookgamer.github.io/music/">生活-音乐</a>页面中听到更多的音乐。我将不定期更新歌单，为您带来更多精彩的音乐体验。</p><h2 id="后续更新"><a href="#后续更新" class="headerlink" title="后续更新"></a>后续更新</h2><p>我会不断努力改进和优化网站，未来将推出更多功能和页面。请持续关注我的网站，期待更多惊喜！</p><p>感谢您对我网站的支持！</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实时聊天功能&quot;&gt;&lt;a href=&quot;#实时聊天功能&quot; class=&quot;headerlink&quot; title=&quot;实时聊天功能&quot;&gt;&lt;/a&gt;实时聊天功能&lt;/h2&gt;&lt;p&gt;大家好，网站已经上线了实时聊天功能！您可以在页面的下方看到聊天图标，点击即可与我进行实时交流。如果您有任何问</summary>
      
    
    
    
    <category term="网站" scheme="https://bookgamer.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="推荐" scheme="https://bookgamer.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
    <category term="生活" scheme="https://bookgamer.github.io/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>欢迎来到本网站</title>
    <link href="https://bookgamer.github.io/2024/06/29/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%9C%AC%E7%BD%91%E7%AB%99/"/>
    <id>https://bookgamer.github.io/2024/06/29/%E6%AC%A2%E8%BF%8E%E6%9D%A5%E5%88%B0%E6%9C%AC%E7%BD%91%E7%AB%99/</id>
    <published>2024-06-29T03:23:21.000Z</published>
    <updated>2024-07-14T07:56:39.996Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎观看"><a href="#欢迎观看" class="headerlink" title="欢迎观看"></a>欢迎观看</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;欢迎观看&quot;&gt;&lt;a href=&quot;#欢迎观看&quot; class=&quot;headerlink&quot; title=&quot;欢迎观看&quot;&gt;&lt;/a&gt;欢迎观看&lt;/h1&gt;</summary>
      
    
    
    
    <category term="网站" scheme="https://bookgamer.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="推荐" scheme="https://bookgamer.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
  <entry>
    <title>祝各位早上好，中午好，晚上好。</title>
    <link href="https://bookgamer.github.io/2024/06/28/hello-world/"/>
    <id>https://bookgamer.github.io/2024/06/28/hello-world/</id>
    <published>2024-06-28T13:47:47.657Z</published>
    <updated>2024-07-14T07:55:54.548Z</updated>
    
    
    
    
    <category term="网站" scheme="https://bookgamer.github.io/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="推荐" scheme="https://bookgamer.github.io/tags/%E6%8E%A8%E8%8D%90/"/>
    
  </entry>
  
</feed>
